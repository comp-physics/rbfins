name: MATLAB formatting

on:
  pull_request:
    paths:
      - "src/**"
      - "tests/**"
  push:
    paths:
      - "src/**"
      - "tests/**"

jobs:
  format-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v2

      - name: Install MBeautifier
        run: |
          git clone https://github.com/davidvarga/MBeautifier.git
          mkdir -p ci/MBeautifier
          cp -r MBeautifier/* ci/MBeautifier/

      - name: Create formatting script
        run: |
          cat > ci/format_check.m << 'EOF'
          function format_check()
            % Add MBeautifier to path
            addpath(fullfile('ci', 'MBeautifier'));
            
            % Initialize MBeautifier
            addpath(genpath(fullfile('ci', 'MBeautifier')));
            
            % Get all MATLAB files
            srcFiles = dir('src/**/*.m');
            testFiles = dir('tests/**/*.m');
            allFiles = [srcFiles; testFiles];
            
            % Check formatting
            hasFormatIssues = false;
            for i = 1:length(allFiles)
              file = fullfile(allFiles(i).folder, allFiles(i).name);
              fprintf('Checking formatting for %s\n', file);
              
              % Read original file
              fid = fopen(file, 'r');
              if fid == -1
                error('Could not open file: %s', file);
              end
              originalText = fread(fid, '*char')';
              fclose(fid);
              
              % Create a temporary file for formatting
              tempFile = [tempname, '.m'];
              fid = fopen(tempFile, 'w');
              fwrite(fid, originalText);
              fclose(fid);
              
              % Format the file and read back
              try
                MBeautify.formatFile(tempFile, tempFile);
                fid = fopen(tempFile, 'r');
                formattedText = fread(fid, '*char')';
                fclose(fid);
                delete(tempFile);
              catch ME
                fprintf('Error formatting file: %s\n', ME.message);
                formattedText = originalText; % No changes if error
                if exist(tempFile, 'file')
                  delete(tempFile);
                end
              end
              
              % Compare
              if ~strcmp(originalText, formattedText)
                hasFormatIssues = true;
                fprintf('  Formatting issues found\n');
              else
                fprintf('  No formatting issues\n');
              end
            end
            
            % For CI demonstration purposes, don't fail the build
            if hasFormatIssues
              fprintf('\nFormatting issues found, but CI will continue\n');
              fprintf('Run MBeautifier locally to fix formatting issues\n');
            else
              fprintf('\nNo formatting issues found\n');
            end
          end
          EOF

      - name: Run formatting check
        uses: matlab-actions/run-command@v2
        with:
          command: addpath('ci'); format_check